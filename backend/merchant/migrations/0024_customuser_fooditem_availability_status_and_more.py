# Generated by Django 4.2.7 on 2025-07-31 14:18

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('merchant', '0023_alter_order_options_order_created_at_order_food_item_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='user_images/')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='customuser_set', related_query_name='user', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='customuser_permissions_set', related_query_name='user', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='fooditem',
            name='availability_status',
            field=models.CharField(choices=[('OUT_OF_STOCK', 'Out of Stock'), ('LOW_STOCK', 'Low Stock'), ('AVAILABLE', 'Available')], default='AVAILABLE', max_length=20),
        ),
        migrations.AddField(
            model_name='fooditem',
            name='delivery_status',
            field=models.CharField(choices=[('PROCESSING', 'Processing'), ('DELIVERED', 'Delivered')], default='PROCESSING', max_length=20),
        ),
        migrations.AddField(
            model_name='fooditem',
            name='discount',
            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
        ),
        migrations.AddField(
            model_name='fooditem',
            name='profile_picture',
            field=models.ImageField(blank=True, null=True, upload_to='food_images/'),
        ),
        migrations.AddField(
            model_name='fooditem',
            name='veg_nonveg',
            field=models.CharField(choices=[('veg', 'Vegetarian'), ('nonveg', 'Non-Vegetarian')], default='veg', max_length=6),
        ),
        migrations.AddField(
            model_name='restaurant',
            name='restaurant_type',
            field=models.CharField(choices=[('local', 'Local'), ('finedining', 'Fine Dining')], default='local', max_length=10),
        ),
        migrations.AlterField(
            model_name='deliveryman',
            name='IdentityType',
            field=models.CharField(choices=[('Citizenship', 'Citizenship'), ('Driving License', 'Driving License')], max_length=30, null=True),
        ),
        migrations.AlterField(
            model_name='fooditem',
            name='description',
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name='fooditem',
            name='price',
            field=models.DecimalField(decimal_places=2, max_digits=7),
        ),
        migrations.DeleteModel(
            name='MenuItem',
        ),
        migrations.AlterField(
            model_name='appuser',
            name='user',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='appuser_profile', to='merchant.customuser'),
        ),
    ]
